
公司项目需要实验的几个方面：1.大屏把数据的获取和加载分开；2.webSocket推送数据（提高完成度）；3.图表代码怎么放入service精简
看不到图表的问题看看是不是胡高伟的代码出了问题
47新表数据库新表：pcr_device_data_avg

===================================================================================

【互联网项目和接项目体现了两个思路：一个是探索性的，一个是确定性的，指导思想要定下来】

===================================================================================

【3月20日开始寻找赚钱机会】

每天中午吃完饭在床上歪一个半小时，既能看书，又能休息。

canDeactivate如何提示有未保存信息？
https://www.concretepage.com/angular-2/angular-candeactivate-guard-example
https://www.tektutorialshub.com/angular/angular-candeactivate-guard/

【虽说打通了，最近总想总结和系统化，还是要练习一段时间前端关键功能的穿透，又到了第二轮穿透的时间了，写代码，然后再总结】

【周六】
出bug了，菜单出现了2次
【左侧替换成二级菜单是没有任何问题的，搜一下nv、menu，然后要看一下这个控件，可能没有想的那么简单】然后做如下合并：user、role、component、article
把铃铛区做出来，把圆形用户头像及下拉列表登出做出来
把mainPage做好，仿造AdminLTE，至少做一个文章列表和更多、地图、工作流等，最好做6个区域
menu没有根据in_use过滤
加消息中心代码【既能按角色全部选择，又能勾选；角色限制；toast；websocket】Expansion Panel + 复选框：https://www.tutorialspoint.com/angular_material7/angular_material7_expansion_panel.htm
toolbar的样式值得好好搞一下【我知道最基本都规则，按这些规则去耐心推理是可以做好的】
今天把消息中心做出来，把用户列表的角色加上去
我的material的树数据还没对上，这个是要做好的【做好二级菜单后，这个功能很重要】
面包屑先想想怎么用，然后看是不是先加一个凑数
弹出框再看（包括目录划分的最佳实践）
从源码看 angular/material2 中 dialog模块的实现：https://www.cnblogs.com/yitim/p/7676050.html
搜索框优化或换掉，我都搜索框还可以做的更好
auto-complete首先把功能的整个流程想清楚，然后看ngx-有没有auto-complete，然后再用material都
【搜索框 + auto-complete】Angular Material 7 - Auto-Complete（里面用到了其他不熟悉的form控件，再看一下）：https://www.tutorialspoint.com/angular_material7/angular_material7_autocomplete.htm
样式必须达到的两点：1.按钮和input要统一（看那个最精美都样式怎么设置都）；2.上方、左侧区域的颜色要统一
二级菜单控件side nav
【这个也需要和bootstrap一起验证】Simple Side Nav For Angular 7+：https://angularscript.com/simple-side-nav-for-angular-7/

ngx-admin看一下、ng-alain再看一下、ngx-控件继续看最终选型

看一个material的代码，看一个ngx-代码。只有看过代码，才能放心用

了解热力图、箱图、openlayer。发站内消息、短信[用户加手机号、邮箱、IM字段]做好（一个模块）
先找一个弹出框组件
尝试控件的过程，也是一个不断筛选哪些值得下载的过程【还是要和ngx等那一套对比一下】

再看看我自定义module里面的forRoot
forRoot：
https://www.imwhite.com.cn/2019/05/understand-angular-forroot/
https://segmentfault.com/a/1190000020148472?utm_source=tag-newest
https://www.bennadel.com/blog/3565-providing-module-configuration-using-forroot-and-ahead-of-time-compiling-in-angular-7-2-0.htm

1.CanActivate和CanActivateChild再细化一轮【canActivateChild理解并用好】
2.canActivate返回Observable<boolean>
  https://angular-2-training-book.rangle.io/routing/route_guards
  https://stackoverflow.com/questions/38425461/angular2-canactivate-calling-async-function

懒加载、预加载用好

mybatis更多验证：(1)根据启动流程，阅读加载配置文件的代码；(2)搞清楚connector、datasource、druid等几类东西的关系

关于Angular样式封装、ng-deep：
https://segmentfault.com/a/1190000012086737
https://angular.io/guide/component-styles
Angular Component Styles：
https://www.tektutorialshub.com/angular/angular-component-styles/
https://blog.thoughtram.io/angular/2015/06/25/styling-angular-2-components.html
https://scotch.io/tutorials/angular-shortcut-to-importing-styles-files-in-components
https://scotch.io/tutorials/all-the-ways-to-add-css-to-angular-2-components
https://blog.angular-university.io/angular-ngclass-ngstyle/
https://stackoverflow.com/questions/32853924/angular-2-how-to-style-host-element-of-the-component
https://v2.angular.io/docs/ts/latest/guide/component-styles.html
https://alligator.io/angular/styles-between-components-angular/
https://codecraft.tv/courses/angular/components/templates-styles-view-encapsulation/
https://coryrylan.com/blog/css-encapsulation-with-angular-components


是不是可以试一下vali-admin？看起来比较轻量【搭配ng-bootstrap搞一次】：https://github.com/pratikborsadiya/vali-admin
读一下我的form代码，按钮和input样式先改过来。ng build --prod的报错解决掉（熟练）
ng-bootstrap的文档再清理一次

Spring Batch Tutorial: Reading Information From an Excel File：https://www.petrikainulainen.net/programming/spring-framework/spring-batch-tutorial-reading-information-from-an-excel-file/

【思考一下】使用ngx-admin这种现成的angular项目，为了代码语义清晰需要把不用的控件排除掉、自己命名新建控件；使用adminLTE这种管理模板除了最开始的侧边栏等，也需要根据需要添加component。那么是不是使用AdminLTE这种还更方便一点？这样看来搜索angular组合好的管理框架意义不大了。

这个里面提到了很多组件：angular Crystal Report、Idle、Wizard、Image-crop：https://www.c-sharpcorner.com/article/learn-mvc-using-angular-pdf-file-viewer/

AdminLTE很强大，它还缺什么常用的控件？它的样式是不是可以很方便的赋给ngx-控件达到整合的目的？
AdminLTE的表格没有设置一页多少条的功能
AdminLTE的Advanced Form值得学习一下
目前（2020.03.07）来看，使用adminLTE（缺少的控件找ngx-）是一个稳妥的方案。看了ngx-admin、ng-alain以及更多通用模板后再看

【从这个网站学习组件可好？】Angular Tree-style Select Component：https://angularscript.com/angular-4-tree-select-component/
ngx-dynamic-dashboard-framework：https://github.com/catalogicsoftware/ngx-dynamic-dashboard-framework
搜“angular image preview”

1.看ng-bootstrap能不能覆盖我要的基础组件（对比AdminLTE看功能）：
https://adminlte.io/themes/v3/index3.html
https://ng-bootstrap.github.io/#/home
ng-bootstrap可以补充AdminLTE的控件【要试，不动手试永远不确定样式整合的效果。感觉ng-bootstrap好多控件和AdminLTE里面完全一样，看一下AdminLTE的代码比较一下就知道了】：
Popover、Tooltip、Rating、Progressbar这种没有框的可以先用起来（节省工作量）、Pagination这种是不是可以先看AdminLTE里面的样式，看准了就可以用了（毕竟自己封装@Input、@Output还是有点麻烦）

【最快的搭AdminLTE的办法是用别人改造成的angular版开源的，直接测试、直接开搞，很轻量没有损失】

【看两条牛仔裤，降价了买】
【3月20号左右：1.前端要达到AdminLTE的里程碑；2.找一下有没有项目机会（如果有就不上班了）】

【做一些编码】
(1)找word、excel的util，并测试；(2)看看有没有ngx版的ztree；(3)看springBatch

1.ngx-控件先试用【应该和echarts用法一样，先知道有个很NB的JS库，然后去找对应的ngx版，找找z-tree】；
  ng2-dragula：
  ngx-bootstrap、ngx-color-picker：https://www.npmjs.com/package/
  ng2-charts、ng2-select、ng2-table
  ngx-progress、ng-circle-progress、ng2-multi-step-form
  ngx-alert：https://www.jianshu.com/p/3c47c5fe11e6
  ngx-mask：https://github.com/JsDaddy/ngx-mask
angular好用的插件集合（持续更新中）【1.熟悉一些，看看对生产力的影响；2.和component做比较；3.样式的整合】：
https://blog.csdn.net/daqiang012/article/details/86617513
https://www.jianshu.com/p/48e5d02a2f88

自己做控件，适合做简单布局的把html现有元素及现有组件组合起来的，也更好做。一旦遇到树控件、甚至更极端的富文本编辑器，就直接用三方的。思考一下树控件的难度，试着自己做一下。

把各种设计风格对比一下（界面、行为），这样才知道他们的主题、控件能否共存

2.看看ngx-admin搭配ng-bootstrap怎么样，ngx-admin先搭配自己的Nebular，不够用再说
3.ngx-bootstrap就是ng-bootstrap的重命名：https://www.npmjs.com/package/ng-bootstrap
ngx-bootstrap contains all core (and not only) Bootstrap components powered by Angular.【用之前应该先评估一下bootstrap有哪些组件】：
https://www.npmjs.com/package/ngx-bootstrap
https://www.cnblogs.com/NeverCtrl-C/p/8215528.html
3+ Ways to Add Bootstrap 4 to Angular 9/8 With Example & Tutorial：https://www.techiediaries.com/angular-bootstrap/
Angular 7/8 & Bootstrap 4 UIs: ng-bootstrap and ngx-bootstrap [Part 1]：https://www.techiediaries.com/angular-bootstrap-ui/
ngx-admin-lte：https://github.com/TwanoO67/ngx-admin-lte

Theming your Angular Material app：https://material.angular.io/guide/theming#defining-a-custom-theme
angular Material修改样式的方式：https://blog.csdn.net/weixin_41905137/article/details/84866458

这个里面有免费版的theme，可以用一下：
https://startangular.com/themes/（尝试跟别人协作）
https://dashboardpack.com/theme-details/architectui-angular-7-dashboard-free/
https://www.tekmx.com/downloads/angular-material-theme-free-download
等吃透一些时间后，花100块钱买一些主题，快速形成产品：
http://www.bluestep.cc/tag/angular-7%E6%A8%A1%E6%9D%BF/
Angular2 应该使用什么样的CSS框架？https://www.zhihu.com/question/46414912/answer/157068422
前端开发，比较出色的 UI 库有哪些？https://www.zhihu.com/question/353100080/answer/875018512

===================================================================================

晚上拖卧室地【整理卫生间地面】（从晚上开始先把扫地包了）、洗袜子、锻炼、杨俊的问题
星期二晚上洗澡
车位租金跟那个人扯一下

从用户权限给媳妇讲起，这一块很重要很难以做好，但是界面上可能很少反映出来。
其他基础设施
整合的难度和工作量
讲github及我的产品策略
如何进化系统的问题

通过打造关系来出售的简单系统（五一要能搞定）
先进的大数据物联网系统：下半年搞定

【最近几天效率不行，是不是因为有点贪多、急功近利？】【节制】
【周五重点】bug分类。看房县新闻，分析局势，剪胡子

==============================================================================================

module需要再好好看一下
https://www.cnblogs.com/zhaoran/archive/2013/05/24/3097482.html
https://www.zhihu.com/tardis/sogou/art/28874230
https://segmentfault.com/a/1190000009175508
@ViewChild('tpl', { read: ViewContainerRef })写法：

后台管理系统的一些文章：
https://zhuanlan.zhihu.com/p/25415328
https://zhuanlan.zhihu.com/p/108922013
https://www.zhihu.com/question/31859504/answer/71178836
https://www.zhihu.com/question/30367057/answer/73817104
https://zhuanlan.zhihu.com/p/25088922
Free Bootstrap Themes：
https://startbootstrap.com/
https://www.sucaihuo.com/
如何设计出色的网站后台原型？
https://www.zhihu.com/question/31859504/answer/1031232042
http://wiki.cn.mikecrm.com/form-layout

【下一步3步走】

1.再搞一轮基础
  【组件库的设计不要想简单了，可能需要大量依赖下面的机制和借鉴CDK等设计思路】
  依赖注入【自己写个依赖注入的？】
  7.simple-dialog.component.html里面的文本抽变量【准备知识：ComponentRef、ElementRef、动态组件、ViewContainerRef】
  Angular :host, :host-context, ::ng-deep - Angular View Encapsulation：https://blog.angular-university.io/angular-host-context/

  angular 2|4|5|6|7 cascade dropdown example：https://yogeshdotnet.com/cascade-dropdowns-in-angular-6-with-example-angular-7-tutorial/

2.再过一轮主题、控件、配色方案，试用ngx-控件：
angular6 中使用bootstrap：
https://www.cnblogs.com/king94Boy/p/9669284.html
https://blog.csdn.net/m0_38106923/article/details/101050788
https://www.hkinfosoft.com/blog/11-angular-component-libraries-you-should-know-in-2018
https://2muchcoffee.com/blog/12-angular-6-libraries-2018/
angular 8封装组件：
https://blog.csdn.net/qq_36321909/article/details/90520713
https://blog.csdn.net/Null_Bugs/article/details/100009476
https://blog.csdn.net/u010313979/article/details/83243664
https://blog.csdn.net/lyj4495673/article/details/81842220
BUILDING ANGULAR 2 COMPONENTS ON THE FLY: A DIALOG BOX EXAMPLE：
  https://www.lucidchart.com/techblog/2016/07/19/building-angular-2-components-on-the-fly-a-dialog-box-example/
Customizing Bootstrap 3 in Angular 2：https://olepetterdahlmann.com/2016/10/15/customizing-bootstrap-3-in-angular-2/
Create Custom Textbox In Angular 8 Using Input And Output Decorators：https://www.c-sharpcorner.com/article/create-custom-textbox-in-angular-8-using-input-and-output-decorators/


3.再搞一轮基础设施，例如预览、富文本的图片上传、excel导出。完了整理本文档

4.补CS基础

5.公司工作：excel的问题再过一遍；做实验；通过外网部署的看前端代码

为什么说「动态类型一时爽，代码重构火葬场」？https://www.zhihu.com/question/30072490/answer/1057400004

==============================================================================================

service应该按照业务划分还是按照功能划分？

routing为啥要弄成module【RouterModule.forRoot(routes)】？forRoot是干嘛的？每加一个component，要有明确的意识放入哪个module
自己封装控件后，需要单独用一个module管理吗？

还是要看material没解决的一些疑问

在产品经理网站再看搜索的设计，结合myql全文检索做站内搜索
凤凰和feeds再看

angular部署试一遍
思考echarts的service怎么写
列一下我的功能列表
angular高德地图插件
缓存路由状态

看看其他主题的介绍，看ng-zorro的颜色搭配，分析2个控件
把ng-bootstrap（配合啥主题？）、bootstrap搞清楚，把以admin-lte为基础的前端方案思考清楚

关于Angular样式封装【注意与 ViewEncapsulation 的关系】：https://zhuanlan.zhihu.com/p/31235358

npm update

【有机会超过公司的几个方面】
1.前端品质；
2.大数据技术（linux及技术栈）；
3.效率：部署(linux)、组件开发、运维
4.最初有人引入AdminLTE，但如果没人看护，1.会落伍；2.adminLTE里面很多功能并没有被用上，导致风格混乱、付出额外多的人力。

【如何搭配主题和控件】
1.控件和主题能不能搭配，首先最关键的问题就是配色。网上有angular material通过thme修改配色的文章【配色也是material使用简便性的一个方面】：
https://material.angular.io/guide/theming（angular material的具体操作还是有门槛的）
2.然后是行为的搭配，再看material design的文章
3.控件元素大小的改变应该很简单把，大一点小一点也不太影响一致性（相比配色来说）
下一轮可以放心使用material design的主题替换现有主题了
找一些控件看看怎么改变配色、怎么改变大小
看看其他几个组件库怎么修改配色
【复工之前一定要把主题改一版，哪怕用material design的】
再看一下angular material 4种主题的效果
如何将less改为scss？
The Material Design color system can help you create a color theme that reflects your brand or style：https://material.io/design/color/#

应该首先关注主题，主题有了没有控件也是可以实现功能的，或者自己封装，只是可能看起来没有那么紧凑。

使用angular + material 2 + flex-layout 开发项目：
https://blog.csdn.net/henrypt/article/details/89214370
https://blog.csdn.net/henrypt/article/details/89214492
再看@mixin

列2个ng-bootstrap的主题方案

angular封装弹出框：
https://www.jianshu.com/p/fbe27a9e0822
https://www.itsvse.com/forum.php?mod=viewthread&tid=5704&page=1
https://www.cnblogs.com/xiaojing140421/p/9389259.html
https://jingyan.baidu.com/article/93f9803f596da7e0e46f55be.html
https://www.cnblogs.com/cench/p/5448624.html

【看完这个能对material理解很多】基于 Angular7 和 material2 的中后台解决方案（ng-notadd）：https://www.v2ex.com/t/504621

Comparing material2 vs. ng-bootstrap vs. ngx-bootstrap vs. primeng：https://npmcompare.com/compare/material2,ng-bootstrap,ngx-bootstrap,primeng
Add Bootstrap to an Angular application：https://blog.fullstacktraining.com/add-bootstrap-to-an-angular-application/
ngx-bootstrap and ng2-bootstrap：https://stackoverflow.com/questions/43394193/difference-between-ngx-bootstrap-and-ng2-bootstrap

2.把paper-dashboard-angular的代码看一下：https://github.com/creativetimofficial/paper-dashboard-angular
【试一下别人推荐的搜索方式】：https://www.zhihu.com/question/309682777/answer/580120248
github搜“paper dashboard”：https://github.com/search?q=paper+dashboard
往前进一步：在我的paper-dashboard-angular-master项目中加一个简单的网站模板
看一下paper-dashboard-angular的module组织，和看公司代码一样，不要有疲劳感

使用ng-alain这种东西需要先fork一次，然后新项目以fork出来的版本为基准再fork一次

【周末】
1.2天时间主要用来写解释器；
动态代理看完后看mybatis源码分析，补一轮java基础（5天）。spring里面用到的动态代理
2.对着我的2个模板看2套控件，看看控件封装了哪些精妙的操作，对模板带来了哪些互补


【不好搞的话就分前后端分别处理】
  把上传的那个类建立起来，把上传测通：https://blog.csdn.net/minaki_/article/details/85163343
  文件上传前端：1.控件及样式；2.进度

echarts比较简单的一个教程：https://www.runoob.com/echarts/echarts-pie.html

如果这些解决的差不多了，有时间再思考一下门户和内容发布系统

====================================================================================

自己搞虽然保持专注很重要，但是更要注意合理休息，否则一个月就废了

进入瓶颈期了，无差别学习一周。另外最近有点发散
如何用npm建一个裸的工程？能建立多少种自己需要的工程？
为什么cookieService没有在package.json里面，而echarts那些就在？

看看最新的主机和显示器，有没有适合放客厅的

【27号简单任务】
  3.再看angular material控件：https://www.tutorialspoint.com/angular_material7/index.htm
  整合rabbitmq（已安装）
  echarts：把图形再熟悉一下，动手一下
  上传图片（前端上传组件研究一下）、导入excel（比较几种导入的方式）；3.word、pdf预览搞定【处于框架思维时，细节思维又消失了，觉得细节麻烦。要能同时保持两种思维】
  2.再配一遍mybatis（或者用financial那个工程？改名为boot-basic，搞懂多数据源）
  Angular Material 2表服务器端分页（看一下indigo里面表格样式）：http://www.voidcn.com/article/p-uxhapwsf-bud.html
  每玩一个控件都要关注：1.样式；2.事件；3.源码及二次开发；

学习设计风格（ant、material、其他），在这个基础上再去理解主题和控件，看搭不搭

1.添加menu页面加树控件

springboot+druid+mybatis-Plus 配置详解【跟xml方式对比】：https://www.cnblogs.com/shine-rainbow/p/9618100.html

看我现有的页面为啥效果做不好（如何用好indigo.css？），再对比用了theme是否能做好

【再确认一下ng-bootstrap和哪个组合最好】
ng-bootstrap组件把配色想清楚、语言替换搞清楚，是不是就没有问题了？https://ng-bootstrap.github.io/#/components/alert/examples
Angular2使用boostrap和ng-bootstrap总结：https://www.cnblogs.com/shawWey/p/7881994.html
ng-bootstrap：
https://github.com/ng-bootstrap/ng-bootstrap
https://ng-bootstrap.github.io/#/home
别人在github上的angular项目（特性教学）【看看有没有UI】：
https://github.com/PatrickJS/angular-starter
https://github.com/Ismaestro/angular8-example-app
https://github.com/ui-router/angular

一旦确定了设计风格和主题，那么每引入一个第三方控件，在选型和引入写代码时，必不可少的两个步骤：1.要保持设计风格一致；2.要保证样式和色系等一致
【双管齐下】
  1.用现有的material项目练技术
  2.根据功能点多方位评估ng-alain这样的主题的能力

开发OA和开发互联网应用前端和后端技术栈都是不同的

菜单只能禁用不能删除
bootstrap与flex【公司里面lte-admin2不能使用bootstrap4会带来哪些过时问题？公司代码package.json的dependencies里面看到了"admin-lte": "^2.4.8"】：
如果使用bootstrap4，所有样式布局应该先尽量用bootstrap来做，不够的再补充css3
Flex布局和Bootstrap布局两者的比较（flex布局协助5等分，7等分）：https://www.cnblogs.com/sexintercourse/p/6732109.html
Bootstrap 3 与 Bootstrap 4 最大的区别就是 Bootstrap 4 使用弹性盒子来布局：https://www.runoob.com/bootstrap4/bootstrap4-flex.html
Bootstrap4之弹性盒子详解（flexbox）：https://blog.csdn.net/qq_42451979/article/details/80753153
bootstrap的flex布局比使用原生的方便在哪里？每一个设施相比原生的都好在哪里？
又思考了一下以前做项目卡在哪里。再看看angular material与样式的关系，最好是能自己封装一些控件，这样才能完全hold住
bootstrap学习要关注：1.思想（几个分布各解决什么问题）；2.components与angular的结合：
https://www.tutorialspoint.com/bootstrap4/index.htm
https://www.bootstrapdash.com/bootstrap-4-tutorial/introduction/
https://qhmit.com/
https://www.runoob.com/bootstrap4/bootstrap4-tutorial.html
测试：要用2年以前的浏览器版本来测
主题的设计和组件的设计风格最好要一致，例如，最好不要用material design的主题，来配合ant design的控件

再用angular material的menu试一把二级菜单
二级菜单：可以自行写代码确定加载几级。二级菜单封装了动态加载右侧component，还封装了什么？
从sidenav再次分析angular material的抽象程度，如果angular material只是封装了结构(标签封装与转换)及行为，那它和样式是解耦的，并且能和其他组件无缝结合【如果只是封装了结构可能还不足以使用，因为组合标签并不难】。再分析其他组件库
angular的封装是封装出了新的标签和行为（一个控件内部又封装了子控件，才提供了一点功能），要有这个意识

感觉angular material封装的很怪，提供给我的到底是侧重material design方面的东西多一点，还是易用性方面多一点？感觉没有太多易用性？

【25号】
看angular material样式表、看控件（看material，对后端的表）
调样式(indigo-pink.css)：1.表格布局；2.按钮样式统一（先改成contact us里面的样式）；4.我的toolbar颜色是怎么配出来的？5.表格的样式
或许应该搜material 8？
看material教程，把红点和圆圈做出来
【把add-article的表单稍微规范化一下，无用代码干掉】
7.先把article的reactive form搞通，然后把add-role的模板驱动的form再过一遍，然后改造成reactive的，然后搞其他的
再次测试mybatis【把这个配置彻底打通】
推动不了，是不是应该先看mybatis源码了？
多tab页路由复用

在把一套控件搞懂之前，另可先不用，自己写

1.【在financial项目中】把ehcache3.x彻底配好（单元测试）【还是没搞清楚：springboot是怎么用ehcache的（怎么关联起来的，再看一遍）。搞懂这个，单元测试ehcache才放心】；
2.x测通、代码写好后，再把2.x的pom配置干掉；
3.用单元测试的方式再次测试mybatis的配置
6.配置redis

超时后，web界面【自动】跳转到登录页写通（需要把session时间改短测试，改成1分钟）
【提高优先级】思考一下面包屑的用处大不大
【提高优先级】2.找5个ngx开头的控件看一下【面包屑、tab先搞、二级菜单、表格控件、msgBox、弹出框】（npm官网，类似mvnrepository）：https://www.npmjs.com/package/package
2.mybatis继续看整合
3.redis整合（继续）、rabbitMQ整合（整合rabbitmq，思考当时在华为时感觉哪里有困惑）：https://www.rabbitmq.com/
java整合rabbitmq和整合缓存一样，都涉及到JSR标准的问题
把我现有的样式文件过一遍，看看能不能看出啥门道【把我现在没有显示全的问题解决一下】

能否使用@Configuration来配置cache和mybatis？

思考如果用angular做门户网站会不会有问题【对比以前，我现在的能力对做门户有哪些新的积累？】
对比最新的门户网站技术
rxjs怎么裸用？怎么测试？现在不用npm都不会写前端了

【把role的edit按钮放到表格后面，这个不难，不要怕】

换主题时要确认一下：我现有的功能能不能覆盖到

angular material虽然不实际使用，但是对前端设计已经后端的数据表的设计以及前端技术提升有重大的意义。先把后端需要哪些表设计对一遍
material控件与form的配合？material的input和form共存吗？（关系搞清楚后再看要不要二次改造）
Angular Material Form Validation, Input, Datepicker and Modal：https://code-maze.com/angular-material-form-validation/
angular material源码：https://github.com/angular/components
angular的表单已经很强大了，material真的有必要？
Angular Material 8 | Stepper Tutorial With Examples：
https://www.freakyjolly.com/angular-material-8-stepper-tutorial-with-examples/
https://www.freakyjolly.com/angular-material-8-datepicker-tutorial-with-examples/
https://www.techiediaries.com/angular-material-navigation-toolbar-sidenav/
Angular Material 的设计之美【知道自己在干什么很重要】：https://zhuanlan.zhihu.com/p/81174831

【寻找合适的表格控件】
addrole编辑写通后带来的新问题：如何控制路由、菜单、面包屑（思考清楚）。使用reset来清空内容
模仿add-role的编辑功能完成其他的（其他的有更多需要看的方面）
规范化表单代码：首先应该都用form把？article.component.html（仿造contact.component.html）、add-role.component.html、add-user、
login里面使用的时reactive form，代码里面有几处messageForm、formBuilder

2.mybatis配置推进出问题了，先配置及测试redis【先用junit测试mybatis配置，后期学习mybatis也用这个】。
沉住气：控件打通后再上主题

注册阿里云、腾讯云、百度云账号
图表界面的定时更新推送数据写通（websocket另一种方式也熟悉一下，后端继续推进。热力图、箱型图搞明白）
把chart页面搞定（这个是不是应该结合主题来学习？）

【思考一下我后端限制那个权限到底有没有毛用，什么时候是典型应用场景】
【定方案】二次开发或许是个可行的方案，前提是要有源码

【19号】
模块权限搞清后，再搞一遍数据权限和systemId

把我下载的几个主题看一下，看看定制过程中会不会出现一些小问题，例如删除一些元素后其他元素排列的效果和是否错位

我们系统的选择日期为什么有违和感？不能找到一个bootstrap4风格的控件吗？这也是可以超越公司的一个方面

1.淘宝、京东、有道看下快递情况
如果前端实在搞不下去了就搞后端基础设施及scheme【这背后隐藏的期望是量变到质变】：
mybatis-spring：http://mybatis.org/spring/
前端基础设施选型练习一下
列表的编辑、删除操作（分为按钮、页面2部分攻克）
富文本上传图片搞定后再搞：【文件表建起来，Vo建起来】
permission还是要看，把shiro彻底搞懂
把用户信息放左侧，右上角留消息中心
ckeditor图片、附件上传
消息中心要用到：1.webSocket；2.右上角铃铛和红点提示；3.toast；

mybatis配置、mybatis-plus配置【这是极为重要的基础设施和能力】
SpringBoot整合Mybatis分为“使用配置文件方式”和“无配置文件注解版”两种方法：https://www.cnblogs.com/xuehuashanghe/p/9593639.html

绑定dropDown、radio写一版出来
1.前端：把样式修复好；
3.角色、用户的增删查改【前端】及权限分配；
4.再看一下那个人主题风格的一致性
6.上方做好搜索框控件：
用户的查看做通，便于后期复制到其他功能

不要没事瞎升级，一定要有路线图：
1.theme；
2.node；
3.angular

【使用let-admin这类主题的思路】
1.拿到主题后先把主题的各部分封装控件；
2.看看是否有需要补充的自定义控件；
3.做项目；
4.只用主要版本，每半年到1年根据主要的版本变化升级一次，并引入积累的自定义代码；
5.升级涉及到很多手工合并，在心理和技能上不要抗拒。升级后的代码只用于新项目；

照着我的计划下去，有望体验一把先写逻辑再换皮肤

招标信息网【爬虫是不是可以配合消息队列？找开源的爬虫】
开源爬虫：
https://zhuanlan.zhihu.com/p/35048195
https://zhuanlan.zhihu.com/p/61289585
https://zhuanlan.zhihu.com/p/64305013
https://zhuanlan.zhihu.com/p/67808888

【把上面的都搞完后，清todo，把前后端复习一遍】

v-viewer 实现图片的预览，放大，旋转等功能：https://blog.csdn.net/qq_43225030/article/details/102498624

angular material的component实现用的是指令【知乎上看看别人的意见】，例如：“The <mat-input>, an Angular Directive”。和我们自定义用component不一样，要注意对比
https://www.cnblogs.com/mttcug/p/7976852.html
https://segmentfault.com/a/1190000016106262
material的设计思想还是没有搞明白
3.学习Sort Header：从这个功能学习官网文档的使用
https://www.tutorialspoint.com/angular_material7/angular_material7_paginator.htm
从官网学习angular material！！！：https://material.angular.io/components/categories
只有在paginator里面看到事件：https://www.tutorialspoint.com/angular_material7/angular_material7_paginator.htm
从官网看事件：https://material.angular.io/components/categories
关于angular material的问题：怎么修改控件？如果用主题自己封装控件就不会有这问题
[Angular Material完全攻略]https://www.tutorialspoint.com/angular_material7/
Angular Material 2 Quick Reference：https://alligator.io/angular/material-design-angular-reference/
material官方全列表：https://material.angular.io/components/dialog/api
Angular 5 Material Dialog Implementation Example：https://www.devglan.com/angular/angular-material-dialog
使用material还有个好处，可以尝试一下换界面的工作量
angular material的table是前端分页，不好用。再从前端数据绑定的角度分析一下，table是不是很难用
【几个关联的问题】
2.没有权限的前后端连好【这又是个关键的问题】（material 2的提示框做出来）
3.权限不够则页面和url保持不变
https://blog.learningtree.com/create-side-menu-angular-2-material-design/
https://www.tutorialspoint.com/angular_material/angular_material_menubar.htm
https://code-maze.com/angular-material-navigation/


2.tab、面包屑进展一点（用angular关键词搜，或许把这一点搞熟才是最终技术成熟的标志）【很有用的特性】（多想几种方法，能写通一种就很OK了）(1.angular material的设计思路再思考；2.几种方式的配合使用)
5.搞清楚用directive和component封装控件的异同
自己想要的基本功能差不多后，再调样式

优先完成：加一个面包屑、加一个tab（这个看起来有点难）
5.前端看看人人网那个哥们儿的框架

前端是不是也可以用拦截器统一处理异常情况？例如权限不足的提示？setUnauthorizedUrl的方法（给这个方法设置一个对应的action，并测试进入这个方法后的返回值）

【再看一眼EasyUI？】EasyUI 下载地址：http://www.jeasyui.cn/download.html

我的userProfile功能后端已经准备好了，切换前端模板后就可以完善了

=================================================================

0.【修复ckeditor（ng update和ng audit fix后用不了了）】
现在还有提示：
found 2 high severity vulnerabilities
  run `npm audit fix` to fix them, or `npm audit` for details
1.把ckeditor配到一个更完善的程度（前后端打通）：
https://loocode.com/post/10149
https://blog.csdn.net/nzyalj/article/details/87870762
Angular7+Ckeditor5基础功能整合：https://blog.csdn.net/nzyalj/article/details/87870762
2.把quill干掉【代码、package.json等配置文件】
3.学习import as（引入插件）：
https://www.cnblogs.com/minigrasshopper/p/7692664.html
https://www.cnblogs.com/minigrasshopper/p/7692813.html


3.一个角色列表，点击后右侧是权限的勾选情况【2个组件】；
4.每跳转路由，还是要从后端验证一下，用emit；

2.用列表管理角色（增删改）；
7.menu的东西放到一个module里面
1.菜单权限再看看后端是否需要拦截
2.side-menu是不是可以用于菜单树（能否做多级）；
继续推进前端鉴权【使用EventEmitter】

根据现有的知识和技能，let-admin是可以直接套在我现有的代码上的

把上传的那个类建立起来，把上传测通：https://blog.csdn.net/minaki_/article/details/85163343

=================================================================

【这个主题和控件的嵌入度不高，再看一下】
Ng-Matero：基于 Angular Material 搭建的中后台管理框架【学习】：
https://www.cnblogs.com/nzbin/p/11150811.html
https://www.cnblogs.com/nzbin/p/11392311.html
20个让你效率更高的CSS代码技巧：http://www.fly63.com/article/detial/3813

看一下公司里面的权限分配
2.把前后端权限控制写通【shiro的permission再看一下】

完成id-to-name管道

【继续学习别人的做法】Angular7路由守卫CanActivate中从服务器端判断登录状态：
https://blog.csdn.net/A156348933/article/details/90241323
（用setTimeout？）https://www.cnblogs.com/Answer1215/p/5924763.html
放到interceptor里面呢？

分两种情况思考，userId是不是应该保存在localStorage里面（和session原理也对比）

周末工作：
给组件设置样式再深挖一下【ck、能看到代码的component、看不到代码的component】
1.集成admin-lte；2.集成components
1.可以利用在家里的时间把大屏的切换规则再仔细考虑一下，看看取数据有没有干扰
2.横轴定制

我的add-role使用模板驱动表单还有几个问题：
1.测试使用单向绑定；2.能否直接用双向绑定解决问题？3.把ngForm用起来，得到最终一致的代码
模板驱动的有新代码暂时先参考add-role和下面2项：
https://segmentfault.com/a/1190000011901953
https://blog.csdn.net/ztguang/article/details/53106962
【直接上reactive forms，下面2个都要看】：
https://malcoded.com/posts/angular-fundamentals-reactive-forms/
https://fireship.io/lessons/basics-reactive-forms-in-angular/

前端的新发现：前端开发出层次性和组合性思维，图标、组件、布局、样式这些元素是可以拆开和组合的

把组件里面套组件写通,ng-content
[class.active]

表格：编辑、删除（把angular material 2的提示框写通）、列出创建者、查看、翻页
【周六】
2.试一下把文章类的做成一个module

测试、完善路由守卫

把基础设施再搞一般，把material 2搞一轮，把rxjs搞一版，就可以用lte-admin做商用产品了

publish、hot、cold：
https://www.sitepoint.com/functional-reactive-programming-rxjs/
https://ncjamieson.com/understanding-publish-and-share/
Learn RxJS：https://www.learnrxjs.io/
先从rxjs的of、from看起：https://blog.tcs-y.com/2019/04/03/rxjs-operate-of-from/
简单学习rxjs中map、concatAll、concatMap、mergeAll、mergeMap、switchAll、switchMap【思考一下每个方法场景，不用RxJS怎么处理】：
https://blog.csdn.net/zgrbsbf/article/details/88369228
发现的问题：rxjs里面不懂的太多pipe、tap、pubish、share，不能急于求成，要彻底理解。否则以后变了自己再去跟还是不懂：
https://stackoverflow.com/questions/47275385/what-are-pipe-and-tap-methods-in-angular-tutorial
publish + refCount 可以简写成 share：
RxJs 5 share（）运算符是如何工作的？https://cloud.tencent.com/developer/ask/63185
2. pipe()作为一种链接运算符的方法，旧的链接方式将不起作用（angular 6）：https://www.jianshu.com/p/ce1a15957a7f
switchAll()的作用？

下载的进度问题再过一遍
  // todo 这是实验性代码
  download() {
    // 从blob中读数据 https://javascript.info/blob
  }

属性值的绑定用错了，应该是这样：[length] = "length"

github提醒我，serialize-javascript要升级到2.1.1版本以上：https://github.com/eternalwt/website_front/network/alert/package-lock.json/serialize-javascript/open
看看是怎么引入的这个库

【学习】搞清楚我们的webSocketService里面Observable的用法
把 SwWebSocketService 和 interceptor 的代码搞过来
把SwHttpClientService的代码弄过来，封装了重试、错误处理、下载等机制（还有鉴权等内容把）
把河北项目的pdf代码移植过来
看一下jwt相关的代码
sw-http-client.servic.ts、sw-jwt.service.ts、sw-menu.service.ts、sw-simplereusestrategy.ts、sw-web-socket.service.ts
把公司里面的代码目录过一遍
前端代码静态扫描一定要用起来，后端直接用阿里巴巴IDEA插件（后端更熟悉一些），然后配合单元测试

2.【没有权限的时候，是否需要路由guard处理？还是就放在interceptor里面】没有权限的统一处理
3.路由守卫的场景？
4.前后端token、session那一套彻底弄懂：
5.http的出错处理
6.下载及进度：把下载的代码抄过来（包括service里面的）
7.上传：https://blog.csdn.net/minaki_/article/details/85163343
SpringBoot 整合Shiro实现动态权限加载更新+Session共享+单点登录：https://www.cnblogs.com/javazhiyin/p/11398374.html

可以先继续完善3个月的功能和基础设施，不要急。如果不给自己足够的时间，学习顺序会扭曲混乱

看完material那个教程，这是基础
Material Design Bootstrap 4 and Angular 5 Tutorial - MdBootstrap：
https://coursetro.com/posts/code/132/Material-Design-Bootstrap-4-and-Angular-5-Tutorial---MdBootstrap
Angular 8 Material Design Tutorial & Example：
https://www.techiediaries.com/angular-material-tutorial-example/
https://www.codershood.info/2017/07/15/login-template-using-angular-material/


1.把另外几个路由配好（全都配出来）；
2.把后端路由重新配一下；
3.怎么调回到登录页？（上一级路由）
3.需要login的页面权限（1.web后端的登录既然已经加了，下一步：把其他页面要权限才能进入做出来）
前端Routes能否/有必要做成从后端读取的？
搞清楚下载的那个模板样式是怎么设置的
再思考动态组件与路由的关系【自己实现一次？把dynamic-container.module.ts的代码弄过来】：
https://www.cnblogs.com/keatkeat/p/6349485.html
https://blog.csdn.net/qq_24352901/article/details/79169491

RouteModule及加载过程再看一遍

jwt已调通，但是怎么从header里面把token传给前端还没解决，现在是从body里面传的（token刷新的问题）

尝试用合理的分支策略来学习前端
在现有的登录页是首页的基础上，开不同的分支，解决不同的问题：
1.主分支：继续解决每一个细小的知识点，侧重于把每一个功能写通和搞懂；
3.分支2：angular material2的分支？
4.分支3：后端管理系统的分支？


再看指令和ngModel

1.以后从github下载代码：尽量不要下载zip包，直接clone（用好clone和fork，提升生产力，有可能幅度还不小，要重视）；

或许我还是太急于求成了，搞熟一些组件库和theme，内网还有那么多待解决的问题要嚼烂。
分析一下功利心对成败的影响

【极度重要】单独搞ngx-bootstrap和material2【搞完这两项后，沉住气，再搞主题和shiro再搞一轮，就通了】
Angular Material 2：
Angular Material 2的资料官方github上有：
https://github.com/angular/components

比较一下admin和lte的功能及可扩展性

【最关键的】样式可以进一大步，只要这个问题解决，我的框架就搭好了，一马平川
12月31日对前端样式的最新理解：material组件（封装功能） + prebuilt-theme负责颜色 + 布局和宽高 + 图片 + 阴影等更高级定制

权限的对应关系是否需要一个单独的表或者放入permission表，做了才知道
guard（前后端鉴权如何配合）：https://www.jb51.net/article/112016.htm
在 angular 6 中利用 JWT 进行身份认证：https://www.jianshu.com/p/a9a535edf79f

把测试环境、生产环境的打包搞好，把严格打包再理解一下

其实问题只剩2个：1.先看angular怎么搭配主题皮肤；2.组件的样式定制
最简单的方式：找一个angular主题，在次基础上引入组件并自定义样式
https://blog.csdn.net/liumiaocn/article/details/81329223

框架搭建任务：
1.路由(路由系统的设计要素？对比引入路由系统的优势)
3.interceptor及;
4.单元测试
5.两套模板
7.常用的pipe
8.尝试自己封装5个控件

Ng-Matero：基于 Angular Material 搭建的中后台管理框架：
https://www.cnblogs.com/nzbin/p/11150811.html
https://www.cnblogs.com/nzbin/p/11392311.html

material design的教程：
https://material.angular.io/components/categories
https://www.techiediaries.com/angular-material-tutorial-example/
新手合并 Angular 7 + Material 2：https://blog.csdn.net/weixin_42027605/article/details/87180454
Angular Material：
https://www.tutorialspoint.com/angular6/angular6_materials.htm
https://www.jianshu.com/p/b5ecc13fde54
比较Ant Design与Material Design
@angular/animations
试一下material design的弹出框
把material design做一遍：前端先搞一个组件库，然后再看主题
Angular Material 的设计之美：https://zhuanlan.zhihu.com/p/81174831
我的那个前端就是material的，把样式搞清楚，然后再推进
bootstrap4与其他组件样式之间的兼容性：
1.看看现在的模板是不是都是bootstrap的；
2.从小问题入手：bootstrap和ckeditor、quill样式之间的兼容性
angular 4 引用 bootstrap 4 记录总结：https://www.cnblogs.com/xxx91hx/p/7898642.html
现在用的样式，就是angular material的样式：@import "~@angular/material/prebuilt-themes/indigo-pink.css";
NG Bootstrap 4.2.0 发布，Bootstrap 的 Angular 集成【把前端的解决方案看清楚，多看一些文章（10到20篇）】：https://www.liangzl.com/get-article-detail-130753.html
Angular 8 UI Components：
https://www.jqwidgets.com/angular/
https://www.telerik.com/kendo-angular-ui
10 Angular and TypeScript Projects to Take You From Zero to Hero 11：https://blog.codewithdan.com/10-angular-and-typescript-projects-to-take-you-from-zero-to-hero/
Layui elementUI iView
https://adminlte.io/
angular-cli 引入ui组件库【admin-lte】：https://www.cnblogs.com/rancho-blog/p/6580185.html
GitHub开源的10个超棒后台管理面板【含angular的】：https://blog.csdn.net/m0_38106923/article/details/101050788
3.EasyUI使用angular版本；

在我的项目中先把tab加进去

layui是啥？

是否需要：HomeModule、AuthModule，搞清楚子module的设计思想
为啥ngModel需要FormsModule？
Can't bind to 'ngModel' since it isn't a known property of 'input'：https://blog.csdn.net/Xumuyang_/article/details/89365069

enum的两种写法：
1.export class，配合static域；
2.export enum；

dashboard：完成热力图、中国地图（没啥难度，需要的只是行动）

最近学到的前后端分离知识：https://www.cnblogs.com/Java3y/p/11320606.html

前端返回值是否根据后端做一个枚举抽象？
这些基本功能有了，开始搞：1.样式；2.组件
移植公司里面的http，增大代码健壮性
继续搞基础设施，继续推敲每一段代码，提升自己
解决搭框架之后的第二个问题，怎么加速，能否到github上搜一些代码

模板与angular的整合：模板的每个页面都对应angular的一个component（这个心里没底，单独找一下午开一个工程试一下）
指导思想：用angular/material把后端和前端基础设施逻辑写好，美化界面是最后一步

对比一下easyui和ng-zorro
下一问题：下载angular版的easyUI界面如何跑起来？（ng serve）
把前端计划变更为前端技术选型【这是非常关键的战略步骤。少即是多，如何能找到正确的选型？】。模板与组件之间的关系搞清楚【看代码对比就OK了，先把我下载的那个看了】。
真的弄明白，才有可能性
https://www.imooc.com/article/37896
网上大部分选型的文章思考深度不够，没有解决快速灵活使用模板开发的问题
比较easyui各个版本的异同，可以提升理解
前端框架与bootstrap等模板的整合
ng-zorro也是前端可视化技术，跟EasyUI等对比一下
【一旦把这个问题想清楚，能够根据场景组合出最优化的方案，后端再精进几个月，就差不多了】一定要对自己干的事有非常清晰的认识


// 把这段代码调通：
providers: [
  // StorageService,
  // { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }
  CookieService,
  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }
],

angular material 8：
https://www.positronx.io/create-login-ui-template-with-angular-8-material-design/
https://www.positronx.io/create-angular-material-8-custom-theme/
https://devconquer.com/angular/angular-material-8-with-angular-8/

=================================================================================

后端首页变登录页的方式：
1.index.html里面的<app-root></app-root>换成<app-login></app-login>；
2.app.module.ts里面的bootstrap做替换：bootstrap: [LoginComponent]//AppComponent

side-nav
https://www.devglan.com/angular/material-sidenav-example
https://www.tutorialspoint.com/angular_material7/angular_material7_sidenav.htm
https://code-maze.com/angular-material-navigation/

mat-form-field（form field） is used to create a wrapper over angular components and is used to apply text styles like underline, bold, hints etc：
https://www.tutorialspoint.com/angular_material7/angular_material7_form_field.htm

mat-icon显示不出来是不是因为没有加CSS：https://github.com/angular/components/issues/7948

angular material toolbar：
https://www.dotnettricks.com/learn/angularmaterial/toolbar-component-example
https://stackoverflow.com/questions/47250643/angular-5-material-mattoolbar-attempting-to-combine-different-toolbar-modes
https://www.techiediaries.com/angular-material-navigation-toolbar-sidenav/
Material 2: Sticky Footer with Mat Sidenav：https://www.thecodecampus.de/blog/material-2-sticky-footer-mat-sidenav/
