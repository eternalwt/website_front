
【几个关联的问题】
1.给前端刷新token（是不是还是要依靠header？）；
2.没有权限的前后端连好【这又是个关键的问题】（material 2的提示框做出来）
3.权限不够则页面和url保持不变
4.logout（前后端彻底搞明白）
5.ckeditor的高度（样式指令的关联学习）
6.把完整的二级菜单移到左侧，上方做好登出、搜索框：
https://blog.learningtree.com/create-side-menu-angular-2-material-design/
https://www.tutorialspoint.com/angular_material/angular_material_menubar.htm
https://code-maze.com/angular-material-navigation/

github.com上的angular_front改名

下载的进度问题再过一遍
  // todo 这是实验性代码
  download() {
    // 从blob中读数据 https://javascript.info/blob
  }
【学习】搞清楚我们的webSocketService里面Observable的用法

把 SwWebSocketService 和 interceptor 的代码搞过来
把SwHttpClientService的代码弄过来，封装了重试、错误处理、下载等机制（还有鉴权等内容把）
把河北项目的pdf代码移植过来
看一下jwt相关的
sw-http-client.servic.ts、sw-jwt.service.ts、sw-menu.service.ts、sw-simplereusestrategy.ts、sw-web-socket.service.ts
把公司里面的代码目录过一遍

发现的问题：rxjs里面不懂的太多pipe、tap、do，不能急于求成，要彻底理解。否则以后变了自己再去跟还是不懂：
https://stackoverflow.com/questions/47275385/what-are-pipe-and-tap-methods-in-angular-tutorial


2.【没有权限的时候，是否需要路由guard处理？还是就放在interceptor里面】没有权限的统一处理
3.路由守卫的场景？
4.前后端token、session那一套彻底弄懂：
5.http的出错处理
6.下载及进度：把下载的代码抄过来（包括service里面的）
7.上传
SpringBoot 整合Shiro实现动态权限加载更新+Session共享+单点登录：https://www.cnblogs.com/javazhiyin/p/11398374.html

可以先继续完善3个月的功能和基础设施，不要急。如果不给自己足够的时间，学习顺序会扭曲混乱

看完material那个教程，这是基础
Material Design Bootstrap 4 and Angular 5 Tutorial - MdBootstrap：
https://coursetro.com/posts/code/132/Material-Design-Bootstrap-4-and-Angular-5-Tutorial---MdBootstrap
看懂INDIGO与material细节与关联
看那几个布局的文章

1.把另外几个路由配好（全都配出来）；
2.把后端路由重新配一下；
3.怎么调回到登录页？（上一级路由）
3.需要login的页面权限（1.web后端的登录既然已经加了，下一步：把其他页面要权限才能进入做出来）
前端Routes能否/有必要做成从后端读取的？
搞清楚下载的那个模板样式是怎么设置的
再思考动态组件与路由的关系【自己实现一次？把dynamic-container.module.ts的代码弄过来】：
https://www.cnblogs.com/keatkeat/p/6349485.html
https://blog.csdn.net/qq_24352901/article/details/79169491

RouteModule及加载过程再看一遍

jwt已调通，但是怎么从header里面把token传给前端还没解决，现在是从body里面传的（token刷新的问题）

尝试用合理的分支策略来学习前端
在现有的登录页是首页的基础上，开不同的分支，解决不同的问题：
1.主分支：继续解决每一个细小的知识点，侧重于把每一个功能写通和搞懂；
3.分支2：angular material2的分支？
4.分支3：后端管理系统的分支？


再看指令和ngModel

（已下载）看看ngx-admin的登陆路由（搞明白后再搞theme）：https://github.com/akveo/ngx-admin
1.以后从github下载代码：尽量不要下载zip包，直接clone（用好clone和fork，提升生产力，有可能幅度还不小，要重视）；

或许我还是太急于求成了，搞熟一些组件库和theme，内网还有那么多待解决的问题要嚼烂。
分析一下功利心对成败的影响

【极度重要】单独搞ngx-bootstrap和material2【搞完这两项后，沉住气，再搞主题和shiro再搞一轮，就通了】
Angular Material 2：https://www.mithunvp.com/angular-material-2-angular-cli-webpack/
比较一下admin和lte的功能及可扩展性

angular好用的插件集合（持续更新中）【1.熟悉一些，看看对生产力的影响；2.和component做比较；3.样式的整合】：
https://blog.csdn.net/daqiang012/article/details/86617513
https://www.jianshu.com/p/48e5d02a2f88

GitHub开源的10个超棒后台管理面板（有几个angular的）：https://blog.csdn.net/m0_38106923/article/details/101050788

思考网站前端怎么处理
【最关键的】样式可以进一大步，只要这个问题解决，我的框架就搭好了，一马平川
2.分支1：尝试给paper-dashboard-angular-master加一个漂亮的登录页【这个问题值得单独拿出来】
2.web前端展示与后端管理的共存【第一步：先加一个静态目录，能显示出来。是否需要再启动一个server？完全可以分开】

是不是先把ng-alain那些下载下来？

权限控制再往前做一步

晚上先把自定义横轴搞定

区分好material和material 2之后再玩
把预定义主题用好：~@angular/material/prebuilt-themes/indigo-pink.css：
https://www.codemeals.com/angular-tutorials/angular-material/
https://kyleledbetter.gitbooks.io/angular-material-2/theming.html

把paper-dashboard-angular-master的代码学习一遍

再起一个项目搞ng-notadd，同步连接后端，作为生成项目的备选【使用这个的指导思想和工作一样，不是全部搞懂才能出项目。可以直接用，解决和用户前端的协同问题】：https://www.liangzl.com/get-article-detail-131379.html

把打开时的鉴权写好
权限的对应关系是否需要一个单独的表或者放入permission表，做了才知道
guard（前后端鉴权如何配合）：https://www.jb51.net/article/112016.htm
在 angular 6 中利用 JWT 进行身份认证：https://www.jianshu.com/p/a9a535edf79f

把测试环境、生产环境的打包搞好，把严格打包再理解一下

其实问题只剩2个：1.先看angular怎么搭配主题皮肤；2.组件的样式定制
最简单的方式：找一个angular主题，在次基础上引入组件并自定义样式
https://blog.csdn.net/liumiaocn/article/details/81329223

大屏页面出现了一堆violation：
[Violation] 'setInterval' handler took 236715ms
[Violation] Forced reflow while executing JavaScript took XXX ms

1.把ckeditor配到一个更完善的程度（前后端打通）：
https://loocode.com/post/10149
https://blog.csdn.net/nzyalj/article/details/87870762
2.把quill干掉（通过在angular.json中配置的方式再试一下quill.js）
3.学习import as（引入插件）：
https://www.cnblogs.com/minigrasshopper/p/7692664.html
https://www.cnblogs.com/minigrasshopper/p/7692813.html


框架搭建任务：
1.路由(路由系统的设计要素？对比引入路由系统的优势)
2.发送请求带token写通（封装）；
3.interceptor及;
4.单元测试
5.两套模板
7.常用的pipe
8.尝试自己封装5个控件

Ng-Matero：基于 Angular Material 搭建的中后台管理框架：
https://www.cnblogs.com/nzbin/p/11150811.html
https://www.cnblogs.com/nzbin/p/11392311.html
基于ng-bootstrap的框架？

下载一个免费（free）模板试一把【已下载，待尝试】
material design的教程：
https://material.angular.io/components/categories
https://www.techiediaries.com/angular-material-tutorial-example/
新手合并 Angular 7 + Material 2：https://blog.csdn.net/weixin_42027605/article/details/87180454
Angular Material：
https://www.tutorialspoint.com/angular6/angular6_materials.htm
https://www.jianshu.com/p/b5ecc13fde54
比较Ant Design与Material Design
@angular/animations
试一下material design的弹出框
把material design做一遍：前端先搞一个组件库，然后再看主题
Angular Material 的设计之美：https://zhuanlan.zhihu.com/p/81174831
我的那个前端就是material的，把样式搞清楚，然后再推进
bootstrap4与其他组件样式之间的兼容性：
1.看看现在的模板是不是都是bootstrap的；
2.从小问题入手：bootstrap和ckeditor、quill样式之间的兼容性
angular 4 引用 bootstrap 4 记录总结：https://www.cnblogs.com/xxx91hx/p/7898642.html
Angular2使用boostrap和ng-bootstrap总结：https://www.cnblogs.com/shawWey/p/7881994.html
现在用的样式，就是angular material的样式：@import "~@angular/material/prebuilt-themes/indigo-pink.css";
NG Bootstrap 4.2.0 发布，Bootstrap 的 Angular 集成【把前端的解决方案看清楚，多看一些文章（10到20篇）】：https://www.liangzl.com/get-article-detail-130753.html
Angular 8 UI Components：
https://www.jqwidgets.com/angular/
https://www.telerik.com/kendo-angular-ui
bootstrap for angular：https://ng-bootstrap.github.io/#/home
10 Angular and TypeScript Projects to Take You From Zero to Hero 11：https://blog.codewithdan.com/10-angular-and-typescript-projects-to-take-you-from-zero-to-hero/
Layui elementUI iView
https://adminlte.io/
angular-cli 引入ui组件库【admin-lte】：https://www.cnblogs.com/rancho-blog/p/6580185.html
GitHub开源的10个超棒后台管理面板【含angular的】：https://blog.csdn.net/m0_38106923/article/details/101050788
3.EasyUI使用angular版本；

在我的项目中先把tab加进去

layui是啥？

是否需要：HomeModule、AuthModule，搞清楚子module的设计思想
为啥ngModel需要FormsModule？
Can't bind to 'ngModel' since it isn't a known property of 'input'：https://blog.csdn.net/Xumuyang_/article/details/89365069

enum的两种写法：
1.export class，配合static域；
2.export enum；

dashboard：完成热力图、中国地图（没啥难度，需要的只是行动）

最近学到的前后端分离知识：https://www.cnblogs.com/Java3y/p/11320606.html

前端返回值是否根据后端做一个枚举抽象？
这些基本功能有了，开始搞：1.样式；2.组件
移植公司里面的http，增大代码健壮性
继续搞基础设施，继续推敲每一段代码，提升自己
解决搭框架之后的第二个问题，怎么加速，能否到github上搜一些代码
往前进一步：在我的paper-dashboard-angular-master项目中加一个简单的网站模板

ng-bootstrap：
https://github.com/ng-bootstrap/ng-bootstrap
https://ng-bootstrap.github.io/#/home
别人在github上的angular项目（特性教学）：
https://github.com/PatrickJS/angular-starter
https://github.com/Ismaestro/angular8-example-app
https://github.com/ui-router/angular

模板与angular的整合：模板的每个页面都对应angular的一个component（这个心里没底，单独找一下午开一个工程试一下）
指导思想：用angular/material把后端和前端基础设施逻辑写好，美化界面是最后一步

下一问题：下载angular版的easyUI界面如何跑起来？（ng serve）
把前端计划变更为前端技术选型【这是非常关键的战略步骤。少即是多，如何能找到正确的选型？】。模板与组件之间的关系搞清楚【看代码对比就OK了，先把我下载的那个看了】。
真的弄明白，才有可能性
https://www.imooc.com/article/37896
网上大部分选型的文章思考深度不够，没有解决快速灵活使用模板开发的问题
比较easyui各个版本的异同，可以提升理解
前端框架与bootstrap等模板的整合
ng-zorro也是前端可视化技术，跟EasyUI等对比一下
【一旦把这个问题想清楚，能够根据场景组合出最优化的方案，后端再精进几个月，就差不多了】一定要对自己干的事有非常清晰的认识

对比一下easyui和ng-zorro

jQuery发送请求：http://www.w3school.com.cn/jquery/ajax_post.asp
POSTMAN之如何获取COOKIE：https://www.cnblogs.com/yecaiye/p/10251747.html
如何在Postman中使用cookie：https://blog.csdn.net/niedewang/article/details/80481652
Postman是可以测试文件参数的，在Body form-data里面


=================================================================================

后端首页变登录页的方式：
1.index.html里面的<app-root></app-root>换成<app-login></app-login>；
2.app.module.ts里面的bootstrap做替换：bootstrap: [LoginComponent]//AppComponent

